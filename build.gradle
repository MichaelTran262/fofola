buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE'
        classpath 'com.bmuschko:gradle-docker-plugin:4.10.0'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'

group = 'cz.mzk'
version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

bootJar {
    mainClassName = 'cz.mzk.integrity.Application'
    destinationDir = project.file('docker/build')
}

dependencies {
    compile('commons-codec:commons-codec:1.10')
    compile('com.squareup.okhttp:okhttp:2.4.0')
    compile('org.postgresql:postgresql:42.2.6')
    compile('com.sun.jersey:jersey-client:1.19.4')
    compile('com.squareup.retrofit:retrofit:1.9.0')
    compile('org.glassfish.jersey.core:jersey-client:2.28')

    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-data-solr')

    testCompile group: 'junit', name: 'junit', version: '4.12'
}


/********************* DOCKER BUILD ***********************/

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task createDockerfile(type: Dockerfile) {
    dependsOn bootJar

    destFile.set(project.file('docker/build/Dockerfile'))
    from('openjdk:jre-alpine')
    label(['maintainer': 'Aleksei Ermak "aleksei.ermak@gmail.com"'])
    copyFile(jar.archiveName, '/app/' + jar.archiveName)
    entryPoint('java')
    exposePort(8081)
    defaultCommand('-jar', '/app/' + jar.archiveName)
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile

    inputDir = project.file('docker/build')
    tags.add('ermak/fofola:latest')
}

clean.doFirst {
    delete(project.file('docker/build'))
}
